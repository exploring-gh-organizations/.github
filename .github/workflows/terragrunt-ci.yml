name: Terragrunt CI

on:
  workflow_call:
    inputs:
      working_directory:
        description: 'Working directory for Terragrunt commands'
        required: true
        type: string

jobs:
  terragrunt-ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.working_directory }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Terragrunt Format Check
        id: fmt
        uses: gruntwork-io/terragrunt-action@v3
        with:
          tg_dir: ${{ inputs.working_directory }}
          tg_command: 'hclfmt --terragrunt-check --all'
        continue-on-error: true

      - name: Terragrunt Validate
        id: validate
        uses: gruntwork-io/terragrunt-action@v3
        with:
          tg_dir: ${{ inputs.working_directory }}
          tg_command: 'validate --all'
        continue-on-error: true

      - name: Terragrunt Plan
        id: plan
        uses: gruntwork-io/terragrunt-action@v3
        with:
          tg_dir: ${{ inputs.working_directory }}
          tg_command: 'plan --all'
        continue-on-error: true

      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const output = `
            #### Terragrunt Results
            - Format: \`${{ steps.fmt.outcome }}\`
            - Validate: \`${{ steps.validate.outcome }}\`
            - Plan: \`${{ steps.plan.outcome }}\`
            
            <details><summary>Show Plan</summary>
            
            \`\`\`
            ${{ steps.plan.outputs.tg_action_output }}
            \`\`\`
            
            </details>`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Fail on Error
        if: steps.fmt.outcome == 'failure' || steps.validate.outcome == 'failure' || steps.plan.outcome == 'failure'
        run: exit 1
